/**
 */
package pythonpipeline.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import pythonpipeline.util.PythonpipelineAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PythonpipelineItemProviderAdapterFactory extends PythonpipelineAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PythonpipelineItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Pipeline} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PipelineItemProvider pipelineItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Pipeline}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPipelineAdapter() {
		if (pipelineItemProvider == null) {
			pipelineItemProvider = new PipelineItemProvider(this);
		}

		return pipelineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.DataFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataFlowItemProvider dataFlowItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.DataFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataFlowAdapter() {
		if (dataFlowItemProvider == null) {
			dataFlowItemProvider = new DataFlowItemProvider(this);
		}

		return dataFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.DataCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataCollectionItemProvider dataCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.DataCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataCollectionAdapter() {
		if (dataCollectionItemProvider == null) {
			dataCollectionItemProvider = new DataCollectionItemProvider(this);
		}

		return dataCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.DataIntegration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataIntegrationItemProvider dataIntegrationItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.DataIntegration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataIntegrationAdapter() {
		if (dataIntegrationItemProvider == null) {
			dataIntegrationItemProvider = new DataIntegrationItemProvider(this);
		}

		return dataIntegrationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Export} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExportItemProvider exportItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Export}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExportAdapter() {
		if (exportItemProvider == null) {
			exportItemProvider = new ExportItemProvider(this);
		}

		return exportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.InputSourceDeclaration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputSourceDeclarationItemProvider inputSourceDeclarationItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.InputSourceDeclaration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputSourceDeclarationAdapter() {
		if (inputSourceDeclarationItemProvider == null) {
			inputSourceDeclarationItemProvider = new InputSourceDeclarationItemProvider(this);
		}

		return inputSourceDeclarationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.OutputFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputFileItemProvider outputFileItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.OutputFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputFileAdapter() {
		if (outputFileItemProvider == null) {
			outputFileItemProvider = new OutputFileItemProvider(this);
		}

		return outputFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.NullValuesRemoval} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NullValuesRemovalItemProvider nullValuesRemovalItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.NullValuesRemoval}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNullValuesRemovalAdapter() {
		if (nullValuesRemovalItemProvider == null) {
			nullValuesRemovalItemProvider = new NullValuesRemovalItemProvider(this);
		}

		return nullValuesRemovalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.CustomCleaning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomCleaningItemProvider customCleaningItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.CustomCleaning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomCleaningAdapter() {
		if (customCleaningItemProvider == null) {
			customCleaningItemProvider = new CustomCleaningItemProvider(this);
		}

		return customCleaningItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Schema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SchemaItemProvider schemaItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Schema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSchemaAdapter() {
		if (schemaItemProvider == null) {
			schemaItemProvider = new SchemaItemProvider(this);
		}

		return schemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.JoinAttributesList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinAttributesListItemProvider joinAttributesListItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.JoinAttributesList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinAttributesListAdapter() {
		if (joinAttributesListItemProvider == null) {
			joinAttributesListItemProvider = new JoinAttributesListItemProvider(this);
		}

		return joinAttributesListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.RuntimeInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuntimeInfoItemProvider runtimeInfoItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.RuntimeInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuntimeInfoAdapter() {
		if (runtimeInfoItemProvider == null) {
			runtimeInfoItemProvider = new RuntimeInfoItemProvider(this);
		}

		return runtimeInfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.ChangeDataFormat} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChangeDataFormatItemProvider changeDataFormatItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.ChangeDataFormat}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChangeDataFormatAdapter() {
		if (changeDataFormatItemProvider == null) {
			changeDataFormatItemProvider = new ChangeDataFormatItemProvider(this);
		}

		return changeDataFormatItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.SVM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SVMItemProvider svmItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.SVM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSVMAdapter() {
		if (svmItemProvider == null) {
			svmItemProvider = new SVMItemProvider(this);
		}

		return svmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.KMeans} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KMeansItemProvider kMeansItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.KMeans}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKMeansAdapter() {
		if (kMeansItemProvider == null) {
			kMeansItemProvider = new KMeansItemProvider(this);
		}

		return kMeansItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Agglomerative} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgglomerativeItemProvider agglomerativeItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Agglomerative}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgglomerativeAdapter() {
		if (agglomerativeItemProvider == null) {
			agglomerativeItemProvider = new AgglomerativeItemProvider(this);
		}

		return agglomerativeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.DBSCAN} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DBSCANItemProvider dbscanItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.DBSCAN}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDBSCANAdapter() {
		if (dbscanItemProvider == null) {
			dbscanItemProvider = new DBSCANItemProvider(this);
		}

		return dbscanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.LinearRegression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearRegressionItemProvider linearRegressionItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.LinearRegression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearRegressionAdapter() {
		if (linearRegressionItemProvider == null) {
			linearRegressionItemProvider = new LinearRegressionItemProvider(this);
		}

		return linearRegressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Ridge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RidgeItemProvider ridgeItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Ridge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRidgeAdapter() {
		if (ridgeItemProvider == null) {
			ridgeItemProvider = new RidgeItemProvider(this);
		}

		return ridgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Lasso} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LassoItemProvider lassoItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Lasso}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLassoAdapter() {
		if (lassoItemProvider == null) {
			lassoItemProvider = new LassoItemProvider(this);
		}

		return lassoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Mean} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeanItemProvider meanItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Mean}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeanAdapter() {
		if (meanItemProvider == null) {
			meanItemProvider = new MeanItemProvider(this);
		}

		return meanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Median} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MedianItemProvider medianItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Median}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMedianAdapter() {
		if (medianItemProvider == null) {
			medianItemProvider = new MedianItemProvider(this);
		}

		return medianItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.StandardDeviation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StandardDeviationItemProvider standardDeviationItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.StandardDeviation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStandardDeviationAdapter() {
		if (standardDeviationItemProvider == null) {
			standardDeviationItemProvider = new StandardDeviationItemProvider(this);
		}

		return standardDeviationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.NotClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotClauseItemProvider notClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.NotClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotClauseAdapter() {
		if (notClauseItemProvider == null) {
			notClauseItemProvider = new NotClauseItemProvider(this);
		}

		return notClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.AndClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AndClauseItemProvider andClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.AndClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAndClauseAdapter() {
		if (andClauseItemProvider == null) {
			andClauseItemProvider = new AndClauseItemProvider(this);
		}

		return andClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.OrClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrClauseItemProvider orClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.OrClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrClauseAdapter() {
		if (orClauseItemProvider == null) {
			orClauseItemProvider = new OrClauseItemProvider(this);
		}

		return orClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.LtClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LtClauseItemProvider ltClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.LtClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLtClauseAdapter() {
		if (ltClauseItemProvider == null) {
			ltClauseItemProvider = new LtClauseItemProvider(this);
		}

		return ltClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.GtClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GtClauseItemProvider gtClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.GtClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGtClauseAdapter() {
		if (gtClauseItemProvider == null) {
			gtClauseItemProvider = new GtClauseItemProvider(this);
		}

		return gtClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.EqClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqClauseItemProvider eqClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.EqClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqClauseAdapter() {
		if (eqClauseItemProvider == null) {
			eqClauseItemProvider = new EqClauseItemProvider(this);
		}

		return eqClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.LeClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeClauseItemProvider leClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.LeClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeClauseAdapter() {
		if (leClauseItemProvider == null) {
			leClauseItemProvider = new LeClauseItemProvider(this);
		}

		return leClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.GeClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeClauseItemProvider geClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.GeClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeClauseAdapter() {
		if (geClauseItemProvider == null) {
			geClauseItemProvider = new GeClauseItemProvider(this);
		}

		return geClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.ContainsClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainsClauseItemProvider containsClauseItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.ContainsClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainsClauseAdapter() {
		if (containsClauseItemProvider == null) {
			containsClauseItemProvider = new ContainsClauseItemProvider(this);
		}

		return containsClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.QueryParam} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParamItemProvider queryParamItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.QueryParam}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParamAdapter() {
		if (queryParamItemProvider == null) {
			queryParamItemProvider = new QueryParamItemProvider(this);
		}

		return queryParamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.CustomParam} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomParamItemProvider customParamItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.CustomParam}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomParamAdapter() {
		if (customParamItemProvider == null) {
			customParamItemProvider = new CustomParamItemProvider(this);
		}

		return customParamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.PrimaryKey} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimaryKeyItemProvider primaryKeyItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.PrimaryKey}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimaryKeyAdapter() {
		if (primaryKeyItemProvider == null) {
			primaryKeyItemProvider = new PrimaryKeyItemProvider(this);
		}

		return primaryKeyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.LogisticRegression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogisticRegressionItemProvider logisticRegressionItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.LogisticRegression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogisticRegressionAdapter() {
		if (logisticRegressionItemProvider == null) {
			logisticRegressionItemProvider = new LogisticRegressionItemProvider(this);
		}

		return logisticRegressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Skewness} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SkewnessItemProvider skewnessItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Skewness}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSkewnessAdapter() {
		if (skewnessItemProvider == null) {
			skewnessItemProvider = new SkewnessItemProvider(this);
		}

		return skewnessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.ScatterPlot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScatterPlotItemProvider scatterPlotItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.ScatterPlot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScatterPlotAdapter() {
		if (scatterPlotItemProvider == null) {
			scatterPlotItemProvider = new ScatterPlotItemProvider(this);
		}

		return scatterPlotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.LabeledScatterPlot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabeledScatterPlotItemProvider labeledScatterPlotItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.LabeledScatterPlot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabeledScatterPlotAdapter() {
		if (labeledScatterPlotItemProvider == null) {
			labeledScatterPlotItemProvider = new LabeledScatterPlotItemProvider(this);
		}

		return labeledScatterPlotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.Histogram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HistogramItemProvider histogramItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.Histogram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHistogramAdapter() {
		if (histogramItemProvider == null) {
			histogramItemProvider = new HistogramItemProvider(this);
		}

		return histogramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.PiePlot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PiePlotItemProvider piePlotItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.PiePlot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPiePlotAdapter() {
		if (piePlotItemProvider == null) {
			piePlotItemProvider = new PiePlotItemProvider(this);
		}

		return piePlotItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.ProjectOnAttributes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectOnAttributesItemProvider projectOnAttributesItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.ProjectOnAttributes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectOnAttributesAdapter() {
		if (projectOnAttributesItemProvider == null) {
			projectOnAttributesItemProvider = new ProjectOnAttributesItemProvider(this);
		}

		return projectOnAttributesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link pythonpipeline.SupportVector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SupportVectorItemProvider supportVectorItemProvider;

	/**
	 * This creates an adapter for a {@link pythonpipeline.SupportVector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSupportVectorAdapter() {
		if (supportVectorItemProvider == null) {
			supportVectorItemProvider = new SupportVectorItemProvider(this);
		}

		return supportVectorItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (pipelineItemProvider != null) pipelineItemProvider.dispose();
		if (dataFlowItemProvider != null) dataFlowItemProvider.dispose();
		if (dataCollectionItemProvider != null) dataCollectionItemProvider.dispose();
		if (dataIntegrationItemProvider != null) dataIntegrationItemProvider.dispose();
		if (exportItemProvider != null) exportItemProvider.dispose();
		if (inputSourceDeclarationItemProvider != null) inputSourceDeclarationItemProvider.dispose();
		if (outputFileItemProvider != null) outputFileItemProvider.dispose();
		if (nullValuesRemovalItemProvider != null) nullValuesRemovalItemProvider.dispose();
		if (customCleaningItemProvider != null) customCleaningItemProvider.dispose();
		if (schemaItemProvider != null) schemaItemProvider.dispose();
		if (joinAttributesListItemProvider != null) joinAttributesListItemProvider.dispose();
		if (runtimeInfoItemProvider != null) runtimeInfoItemProvider.dispose();
		if (changeDataFormatItemProvider != null) changeDataFormatItemProvider.dispose();
		if (svmItemProvider != null) svmItemProvider.dispose();
		if (kMeansItemProvider != null) kMeansItemProvider.dispose();
		if (agglomerativeItemProvider != null) agglomerativeItemProvider.dispose();
		if (dbscanItemProvider != null) dbscanItemProvider.dispose();
		if (linearRegressionItemProvider != null) linearRegressionItemProvider.dispose();
		if (ridgeItemProvider != null) ridgeItemProvider.dispose();
		if (lassoItemProvider != null) lassoItemProvider.dispose();
		if (meanItemProvider != null) meanItemProvider.dispose();
		if (medianItemProvider != null) medianItemProvider.dispose();
		if (standardDeviationItemProvider != null) standardDeviationItemProvider.dispose();
		if (notClauseItemProvider != null) notClauseItemProvider.dispose();
		if (andClauseItemProvider != null) andClauseItemProvider.dispose();
		if (orClauseItemProvider != null) orClauseItemProvider.dispose();
		if (ltClauseItemProvider != null) ltClauseItemProvider.dispose();
		if (gtClauseItemProvider != null) gtClauseItemProvider.dispose();
		if (eqClauseItemProvider != null) eqClauseItemProvider.dispose();
		if (leClauseItemProvider != null) leClauseItemProvider.dispose();
		if (geClauseItemProvider != null) geClauseItemProvider.dispose();
		if (containsClauseItemProvider != null) containsClauseItemProvider.dispose();
		if (queryParamItemProvider != null) queryParamItemProvider.dispose();
		if (customParamItemProvider != null) customParamItemProvider.dispose();
		if (primaryKeyItemProvider != null) primaryKeyItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (logisticRegressionItemProvider != null) logisticRegressionItemProvider.dispose();
		if (skewnessItemProvider != null) skewnessItemProvider.dispose();
		if (scatterPlotItemProvider != null) scatterPlotItemProvider.dispose();
		if (labeledScatterPlotItemProvider != null) labeledScatterPlotItemProvider.dispose();
		if (histogramItemProvider != null) histogramItemProvider.dispose();
		if (piePlotItemProvider != null) piePlotItemProvider.dispose();
		if (projectOnAttributesItemProvider != null) projectOnAttributesItemProvider.dispose();
		if (supportVectorItemProvider != null) supportVectorItemProvider.dispose();
	}

}
